
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://guikdtwcpagcpyqieftm.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Imd1aWtkdHdjcGFnY3B5cWllZnRtIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDc5MTg1MjcsImV4cCI6MjA2MzQ5NDUyN30.SdbUc0LaE4CBuWi-J_-AvdT4RD9E2m7_SRkewfd5s2E";

export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY, {
  auth: {
    storage: localStorage,
    persistSession: true,
    autoRefreshToken: true,
  }
});

// Helper function to get URL for company files
export const getCompanyFileUrl = (companyId: string, fileName: string): string => {
  return `${SUPABASE_URL}/storage/v1/object/public/company_files/${companyId}/${fileName}`;
};

// Helper function to clean up auth state (prevents auth limbo issues)
export const cleanupAuthState = () => {
  // Remove standard auth tokens
  localStorage.removeItem('supabase.auth.token');
  // Remove all Supabase auth keys from localStorage
  Object.keys(localStorage).forEach((key) => {
    if (key.startsWith('supabase.auth.') || key.includes('sb-')) {
      localStorage.removeItem(key);
    }
  });
  // Remove from sessionStorage if in use
  Object.keys(sessionStorage || {}).forEach((key) => {
    if (key.startsWith('supabase.auth.') || key.includes('sb-')) {
      sessionStorage.removeItem(key);
    }
  });
};
